name: Upload Python Package

on:
  push:
    tags:
      - "v*.*"
jobs:
  integration_tests:
    environment: Dev
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        poetry-version: ["1.1.13", "1.1.12"]
    env:
      CUCM_PUBLISHER: ${{ secrets.CUCM_PUBLISHER }}
      CUCM_AXL_USERNAME: ${{ secrets.CUCM_AXL_USERNAME }}
      CUCM_AXL_PASSWORD: ${{ secrets.CUCM_AXL_PASSWORD }}
      CUCM_VERSION: ${{ secrets.CUCM_VERSION }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Poetry ${{ matrix.poetry-version }}
        uses: abatilo/actions-poetry@v2.1.3
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Set Poetry env to use Python ${{ matrix.python-version }}
        run: |
          poetry env use ${{ matrix.python-version }}

      - name: Install dependencies with Poetry
        run: |
          poetry install -E github
          echo "::set-output name=POETRY_VENV::$(poetry env info -p)"
        id: install

      - name: Lint with flake8
        run: |
          # work from the virtualenv
          source ${{ steps.install.outputs.POETRY_VENV }}/bin/activate
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Bandit Security scan
        run: |
          poetry run bandit -c bandit.yml -r ciscoaxl

      - name: Test with pytest
        run: |
          poetry run coverage run -m pytest -v

      - name: Code Coverage Report
        run: |
          poetry run coverage report -m

  publish:
    needs: "integration-tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build and publish to pypi
        uses: JRubics/poetry-publish@v1.10
        with:
          pypi_token: ${{ secrets.PYPI_API_TOKEN }}
